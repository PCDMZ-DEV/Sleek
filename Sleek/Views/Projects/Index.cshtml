@model PaginatedList<Sleek.Models.Project>

@{
    ViewBag.Title = "Activity";
    ViewData["Controller"] = "Projects";
    ViewData["Action"] = "Index";
}

@section CSS {

}

@section Scripts {

}

<div class="content">
    <div class="row">
        <div class="col-12">

            <div class="card card-default">

                <div class="card-body">

                    <div class="d-flex float-left">
                        <h3 class="mb-3">Projects</h3>
                    </div>
                    <form class="form-inline float-right" asp-action="#">
                        <div class="form-group mb-3 mt-0">
                            <button asp-action="New" class="btn btn-sm btn-secondary">New Project</button>
                        </div>
                    </form>

                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th><a asp-action="Index" asp-route-sortOrder="@ViewData["ID"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">ID</a></th>
                                <th><a asp-action="Index" asp-route-sortOrder="@ViewData["Date"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Date</a></th>
                                <th><a asp-action="Index" asp-route-sortOrder="@ViewData["Description"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Description</a></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model) {
                                <tr>
                                    <td><a asp-action="Detail" asp-route-id="@item.ProId">@Html.DisplayFor(modelItem => item.ProId)</a></td>
                                    <td>@Html.DisplayFor(modelItem => item.ProDate)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ProDescription)</td>
                                </tr>
                            }
                        </tbody>
                    </table>


                    @{
                        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                    }
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-default @prevDisabled">Previous</a>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-default @nextDisabled">Next</a>
                </div>
            </div>
        </div>
    </div>
</div>
