@model PaginatedList<Sleek.Models.Activity>

@{
    ViewBag.Title = "Notification Activity";
}

@section CSS {

}

@section Scripts {

}

<div class="content">
    <div class="row my-5">
        <div class="col-12">

            <form class="form-inline" asp-action="Profile" method="get">
                <div class="form-group">
                    <div class="input-group">
                        <input class="form-control" type="text" name="SearchString" id="SearchString" value="@ViewData["CurrentFilter"]" placeholder="Search String" />
                        <div class="input-group-append">
                            <input type="submit" value="Search" class="btn btn-default btn-success" />
                        </div>
                    </div>
                </div>
            </form>

            <div class="card">
                <div class="card-body p-0">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Date</th>
                                <th>Description</th>
                                <th><a asp-action="Activity" asp-route-sortOrder="@ViewData["TypeSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Type</a></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model) {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.ActId)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ActDate)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ActDescription)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ActType)</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            @{
                var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.HasNextPage ? "disabled" : "";
            }

            <a asp-action="Profile" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-default @prevDisabled">Previous</a>
            <a asp-action="Profile" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-default @nextDisabled">Next</a>

        </div>
    </div>
</div>