@model PaginatedList<Sleek.Models.User>

<div class="row my-5">
    <div class="col-12">

        <form class="form-inline" asp-action="Profile" method="get">
            <div class="form-group">
                <div class="input-group">
                    <input class="form-control" type="text" name="SearchString" id="SearchString" value="@ViewData["CurrentFilter"]" placeholder="Search String" />
                    <div class="input-group-append">
                        <input type="submit" value="Search" class="btn btn-default btn-success" />
                    </div>
                </div>
            </div>
        </form>

        <div class="card">
            <div class="card-body p-0">
                <table class="table">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>First</th>
                            <th>Last</th>
                            <th><a asp-action="Profile" asp-route-sortOrder="@ViewData["EmailSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">E-Mail</a></th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model) {
                            <tr>
                                <td>
                                    <a asp-action="Edit" asp-route-id="@item.UsrId"> @Html.DisplayFor(modelItem => item.UsrId)</a>
                                </td>
                                <td>@Html.DisplayFor(modelItem => item.UsrFirst)</td>
                                <td>@Html.DisplayFor(modelItem => item.UsrLast)</td>
                                <td>@Html.DisplayFor(modelItem => item.UsrEmail)</td>
                                <td>
                                    <a asp-controller="User" asp-action="Edit" asp-route-id="@item.UsrId"><i class="mdi mdi-pencil"></i></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }

        <a asp-action="Profile" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-default @prevDisabled">Previous</a>
        <a asp-action="Profile" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-default @nextDisabled">Next</a>

    </div>
</div>

